#after comptetition
====================================================================================================
----------------------------------------------------------------------------------------------------
====================================================================================================

Problem description:

time limit per test:    1 second
memory limit per test:  256 megabytes

This is the easy version of the problem. The difference between the versions is the constraint on n
and the required number of operations.

There are two binary strings a and b of length n ( 1 ≤ n ≤ 10^5 ) (a binary string is a string
consisting of symbols 0 and 1). In an operation, you select a prefix of a, and simultaneously invert
the bits in the prefix (0 changes to 1 and 1 changes to 0) and reverse the order of the bits in the prefix.

For example, if a=001011 and you select the prefix of length 3, it becomes 011011. Then if you select the
entire string, it becomes 001001. Your task is to transform the string a into b in at most 2n operations.
It can be proved that it is always possible.

The first line contains a single integer t ( 1 ≤ t ≤ 1000 )  — the number of test cases. 

====================================================================================================
----------------------------------------------------------------------------------------------------
====================================================================================================

Solution algorithm:

(from Editorial - https://codeforces.com/blog/entry/80427)

Given an arbitrary binary string s, we can make all bits 0 in at most n operations. Simply scan the
string from left to right. If bits i and i+1 disagree, apply the operation to the prefix of length i.
This is also easy to simulate in O(n) time.

We can make s all zeros in at most n operations, and we can make t all zeros in at most n operations.
By reversing the order of the operations on t, we have transformed s into t in at most 2n operations,
as desired.

====================================================================================================
----------------------------------------------------------------------------------------------------
====================================================================================================

Time and memory usage:

Time:   77 ms
Memory: 5300 kb

====================================================================================================
----------------------------------------------------------------------------------------------------
====================================================================================================

Note: I spent a lot of effor to emplement solution through using vector instead string, but there
was a strange result. I figured out that take line '01101...' as input for vector is a bad idea, 
string more reliable way for it.
